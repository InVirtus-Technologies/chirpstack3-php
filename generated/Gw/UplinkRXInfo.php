<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gw/gw.proto

namespace Gw;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>gw.UplinkRXInfo</code>
 */
class UplinkRXInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Gateway ID.
     *
     * Generated from protobuf field <code>bytes gateway_id = 1 [json_name = "gatewayID"];</code>
     */
    protected $gateway_id = '';
    /**
     * RX time (only set when the gateway has a GPS module).
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     */
    protected $time = null;
    /**
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration time_since_gps_epoch = 3 [json_name = "timeSinceGPSEpoch"];</code>
     */
    protected $time_since_gps_epoch = null;
    /**
     * RSSI.
     *
     * Generated from protobuf field <code>int32 rssi = 5;</code>
     */
    protected $rssi = 0;
    /**
     * LoRa SNR.
     *
     * Generated from protobuf field <code>double lora_snr = 6 [json_name = "loRaSNR"];</code>
     */
    protected $lora_snr = 0.0;
    /**
     * Channel.
     *
     * Generated from protobuf field <code>uint32 channel = 7;</code>
     */
    protected $channel = 0;
    /**
     * RF Chain.
     *
     * Generated from protobuf field <code>uint32 rf_chain = 8;</code>
     */
    protected $rf_chain = 0;
    /**
     * Board.
     *
     * Generated from protobuf field <code>uint32 board = 9;</code>
     */
    protected $board = 0;
    /**
     * Antenna.
     *
     * Generated from protobuf field <code>uint32 antenna = 10;</code>
     */
    protected $antenna = 0;
    /**
     * Location.
     *
     * Generated from protobuf field <code>.common.Location location = 11;</code>
     */
    protected $location = null;
    /**
     * Fine-timestamp type.
     *
     * Generated from protobuf field <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
     */
    protected $fine_timestamp_type = 0;
    /**
     * Gateway specific context.
     *
     * Generated from protobuf field <code>bytes context = 15;</code>
     */
    protected $context = '';
    /**
     * Uplink ID (UUID bytes).
     * Unique and random ID which can be used to correlate the uplink across multiple logs.
     *
     * Generated from protobuf field <code>bytes uplink_id = 16 [json_name = "uplinkID"];</code>
     */
    protected $uplink_id = '';
    /**
     * CRC status.
     *
     * Generated from protobuf field <code>.gw.CRCStatus crc_status = 17 [json_name = "crcStatus"];</code>
     */
    protected $crc_status = 0;
    protected $fine_timestamp;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $gateway_id
     *           Gateway ID.
     *     @type \Google\Protobuf\Timestamp $time
     *           RX time (only set when the gateway has a GPS module).
     *     @type \Google\Protobuf\Duration $time_since_gps_epoch
     *           RX time since GPS epoch (only set when the gateway has a GPS module).
     *     @type int $rssi
     *           RSSI.
     *     @type float $lora_snr
     *           LoRa SNR.
     *     @type int $channel
     *           Channel.
     *     @type int $rf_chain
     *           RF Chain.
     *     @type int $board
     *           Board.
     *     @type int $antenna
     *           Antenna.
     *     @type \Common\Location $location
     *           Location.
     *     @type int $fine_timestamp_type
     *           Fine-timestamp type.
     *     @type \Gw\EncryptedFineTimestamp $encrypted_fine_timestamp
     *           Encrypted fine-timestamp data.
     *     @type \Gw\PlainFineTimestamp $plain_fine_timestamp
     *           Plain fine-timestamp data.
     *     @type string $context
     *           Gateway specific context.
     *     @type string $uplink_id
     *           Uplink ID (UUID bytes).
     *           Unique and random ID which can be used to correlate the uplink across multiple logs.
     *     @type int $crc_status
     *           CRC status.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gw\Gw::initOnce();
        parent::__construct($data);
    }

    /**
     * Gateway ID.
     *
     * Generated from protobuf field <code>bytes gateway_id = 1 [json_name = "gatewayID"];</code>
     * @return string
     */
    public function getGatewayId()
    {
        return $this->gateway_id;
    }

    /**
     * Gateway ID.
     *
     * Generated from protobuf field <code>bytes gateway_id = 1 [json_name = "gatewayID"];</code>
     * @param string $var
     * @return $this
     */
    public function setGatewayId($var)
    {
        GPBUtil::checkString($var, False);
        $this->gateway_id = $var;

        return $this;
    }

    /**
     * RX time (only set when the gateway has a GPS module).
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTime()
    {
        return $this->time;
    }

    public function hasTime()
    {
        return isset($this->time);
    }

    public function clearTime()
    {
        unset($this->time);
    }

    /**
     * RX time (only set when the gateway has a GPS module).
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->time = $var;

        return $this;
    }

    /**
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration time_since_gps_epoch = 3 [json_name = "timeSinceGPSEpoch"];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTimeSinceGpsEpoch()
    {
        return $this->time_since_gps_epoch;
    }

    public function hasTimeSinceGpsEpoch()
    {
        return isset($this->time_since_gps_epoch);
    }

    public function clearTimeSinceGpsEpoch()
    {
        unset($this->time_since_gps_epoch);
    }

    /**
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration time_since_gps_epoch = 3 [json_name = "timeSinceGPSEpoch"];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTimeSinceGpsEpoch($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->time_since_gps_epoch = $var;

        return $this;
    }

    /**
     * RSSI.
     *
     * Generated from protobuf field <code>int32 rssi = 5;</code>
     * @return int
     */
    public function getRssi()
    {
        return $this->rssi;
    }

    /**
     * RSSI.
     *
     * Generated from protobuf field <code>int32 rssi = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setRssi($var)
    {
        GPBUtil::checkInt32($var);
        $this->rssi = $var;

        return $this;
    }

    /**
     * LoRa SNR.
     *
     * Generated from protobuf field <code>double lora_snr = 6 [json_name = "loRaSNR"];</code>
     * @return float
     */
    public function getLoraSnr()
    {
        return $this->lora_snr;
    }

    /**
     * LoRa SNR.
     *
     * Generated from protobuf field <code>double lora_snr = 6 [json_name = "loRaSNR"];</code>
     * @param float $var
     * @return $this
     */
    public function setLoraSnr($var)
    {
        GPBUtil::checkDouble($var);
        $this->lora_snr = $var;

        return $this;
    }

    /**
     * Channel.
     *
     * Generated from protobuf field <code>uint32 channel = 7;</code>
     * @return int
     */
    public function getChannel()
    {
        return $this->channel;
    }

    /**
     * Channel.
     *
     * Generated from protobuf field <code>uint32 channel = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setChannel($var)
    {
        GPBUtil::checkUint32($var);
        $this->channel = $var;

        return $this;
    }

    /**
     * RF Chain.
     *
     * Generated from protobuf field <code>uint32 rf_chain = 8;</code>
     * @return int
     */
    public function getRfChain()
    {
        return $this->rf_chain;
    }

    /**
     * RF Chain.
     *
     * Generated from protobuf field <code>uint32 rf_chain = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setRfChain($var)
    {
        GPBUtil::checkUint32($var);
        $this->rf_chain = $var;

        return $this;
    }

    /**
     * Board.
     *
     * Generated from protobuf field <code>uint32 board = 9;</code>
     * @return int
     */
    public function getBoard()
    {
        return $this->board;
    }

    /**
     * Board.
     *
     * Generated from protobuf field <code>uint32 board = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setBoard($var)
    {
        GPBUtil::checkUint32($var);
        $this->board = $var;

        return $this;
    }

    /**
     * Antenna.
     *
     * Generated from protobuf field <code>uint32 antenna = 10;</code>
     * @return int
     */
    public function getAntenna()
    {
        return $this->antenna;
    }

    /**
     * Antenna.
     *
     * Generated from protobuf field <code>uint32 antenna = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setAntenna($var)
    {
        GPBUtil::checkUint32($var);
        $this->antenna = $var;

        return $this;
    }

    /**
     * Location.
     *
     * Generated from protobuf field <code>.common.Location location = 11;</code>
     * @return \Common\Location|null
     */
    public function getLocation()
    {
        return $this->location;
    }

    public function hasLocation()
    {
        return isset($this->location);
    }

    public function clearLocation()
    {
        unset($this->location);
    }

    /**
     * Location.
     *
     * Generated from protobuf field <code>.common.Location location = 11;</code>
     * @param \Common\Location $var
     * @return $this
     */
    public function setLocation($var)
    {
        GPBUtil::checkMessage($var, \Common\Location::class);
        $this->location = $var;

        return $this;
    }

    /**
     * Fine-timestamp type.
     *
     * Generated from protobuf field <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
     * @return int
     */
    public function getFineTimestampType()
    {
        return $this->fine_timestamp_type;
    }

    /**
     * Fine-timestamp type.
     *
     * Generated from protobuf field <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setFineTimestampType($var)
    {
        GPBUtil::checkEnum($var, \Gw\FineTimestampType::class);
        $this->fine_timestamp_type = $var;

        return $this;
    }

    /**
     * Encrypted fine-timestamp data.
     *
     * Generated from protobuf field <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     * @return \Gw\EncryptedFineTimestamp|null
     */
    public function getEncryptedFineTimestamp()
    {
        return $this->readOneof(13);
    }

    public function hasEncryptedFineTimestamp()
    {
        return $this->hasOneof(13);
    }

    /**
     * Encrypted fine-timestamp data.
     *
     * Generated from protobuf field <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     * @param \Gw\EncryptedFineTimestamp $var
     * @return $this
     */
    public function setEncryptedFineTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Gw\EncryptedFineTimestamp::class);
        $this->writeOneof(13, $var);

        return $this;
    }

    /**
     * Plain fine-timestamp data.
     *
     * Generated from protobuf field <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     * @return \Gw\PlainFineTimestamp|null
     */
    public function getPlainFineTimestamp()
    {
        return $this->readOneof(14);
    }

    public function hasPlainFineTimestamp()
    {
        return $this->hasOneof(14);
    }

    /**
     * Plain fine-timestamp data.
     *
     * Generated from protobuf field <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     * @param \Gw\PlainFineTimestamp $var
     * @return $this
     */
    public function setPlainFineTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Gw\PlainFineTimestamp::class);
        $this->writeOneof(14, $var);

        return $this;
    }

    /**
     * Gateway specific context.
     *
     * Generated from protobuf field <code>bytes context = 15;</code>
     * @return string
     */
    public function getContext()
    {
        return $this->context;
    }

    /**
     * Gateway specific context.
     *
     * Generated from protobuf field <code>bytes context = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setContext($var)
    {
        GPBUtil::checkString($var, False);
        $this->context = $var;

        return $this;
    }

    /**
     * Uplink ID (UUID bytes).
     * Unique and random ID which can be used to correlate the uplink across multiple logs.
     *
     * Generated from protobuf field <code>bytes uplink_id = 16 [json_name = "uplinkID"];</code>
     * @return string
     */
    public function getUplinkId()
    {
        return $this->uplink_id;
    }

    /**
     * Uplink ID (UUID bytes).
     * Unique and random ID which can be used to correlate the uplink across multiple logs.
     *
     * Generated from protobuf field <code>bytes uplink_id = 16 [json_name = "uplinkID"];</code>
     * @param string $var
     * @return $this
     */
    public function setUplinkId($var)
    {
        GPBUtil::checkString($var, False);
        $this->uplink_id = $var;

        return $this;
    }

    /**
     * CRC status.
     *
     * Generated from protobuf field <code>.gw.CRCStatus crc_status = 17 [json_name = "crcStatus"];</code>
     * @return int
     */
    public function getCrcStatus()
    {
        return $this->crc_status;
    }

    /**
     * CRC status.
     *
     * Generated from protobuf field <code>.gw.CRCStatus crc_status = 17 [json_name = "crcStatus"];</code>
     * @param int $var
     * @return $this
     */
    public function setCrcStatus($var)
    {
        GPBUtil::checkEnum($var, \Gw\CRCStatus::class);
        $this->crc_status = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getFineTimestamp()
    {
        return $this->whichOneof("fine_timestamp");
    }

}

