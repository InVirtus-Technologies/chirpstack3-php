<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gw/gw.proto

namespace Gw;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>gw.EncryptedFineTimestamp</code>
 */
class EncryptedFineTimestamp extends \Google\Protobuf\Internal\Message
{
    /**
     * AES key index used for encrypting the fine timestamp.
     *
     * Generated from protobuf field <code>uint32 aes_key_index = 1;</code>
     */
    protected $aes_key_index = 0;
    /**
     * Encrypted 'main' fine-timestamp (ns precision part of the timestamp).
     *
     * Generated from protobuf field <code>bytes encrypted_ns = 2 [json_name = "encryptedNS"];</code>
     */
    protected $encrypted_ns = '';
    /**
     * FPGA ID.
     *
     * Generated from protobuf field <code>bytes fpga_id = 3 [json_name = "fpgaID"];</code>
     */
    protected $fpga_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $aes_key_index
     *           AES key index used for encrypting the fine timestamp.
     *     @type string $encrypted_ns
     *           Encrypted 'main' fine-timestamp (ns precision part of the timestamp).
     *     @type string $fpga_id
     *           FPGA ID.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gw\Gw::initOnce();
        parent::__construct($data);
    }

    /**
     * AES key index used for encrypting the fine timestamp.
     *
     * Generated from protobuf field <code>uint32 aes_key_index = 1;</code>
     * @return int
     */
    public function getAesKeyIndex()
    {
        return $this->aes_key_index;
    }

    /**
     * AES key index used for encrypting the fine timestamp.
     *
     * Generated from protobuf field <code>uint32 aes_key_index = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setAesKeyIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->aes_key_index = $var;

        return $this;
    }

    /**
     * Encrypted 'main' fine-timestamp (ns precision part of the timestamp).
     *
     * Generated from protobuf field <code>bytes encrypted_ns = 2 [json_name = "encryptedNS"];</code>
     * @return string
     */
    public function getEncryptedNs()
    {
        return $this->encrypted_ns;
    }

    /**
     * Encrypted 'main' fine-timestamp (ns precision part of the timestamp).
     *
     * Generated from protobuf field <code>bytes encrypted_ns = 2 [json_name = "encryptedNS"];</code>
     * @param string $var
     * @return $this
     */
    public function setEncryptedNs($var)
    {
        GPBUtil::checkString($var, False);
        $this->encrypted_ns = $var;

        return $this;
    }

    /**
     * FPGA ID.
     *
     * Generated from protobuf field <code>bytes fpga_id = 3 [json_name = "fpgaID"];</code>
     * @return string
     */
    public function getFpgaId()
    {
        return $this->fpga_id;
    }

    /**
     * FPGA ID.
     *
     * Generated from protobuf field <code>bytes fpga_id = 3 [json_name = "fpgaID"];</code>
     * @param string $var
     * @return $this
     */
    public function setFpgaId($var)
    {
        GPBUtil::checkString($var, False);
        $this->fpga_id = $var;

        return $this;
    }

}

