<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ns/ns.proto

namespace Ns;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ns.SendProprietaryPayloadRequest</code>
 */
class SendProprietaryPayloadRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * MACPayload of the proprietary LoRaWAN frame.
     *
     * Generated from protobuf field <code>bytes mac_payload = 1;</code>
     */
    protected $mac_payload = '';
    /**
     * MIC of the proprietary LoRaWAN frame (must be 4 bytes).
     *
     * Generated from protobuf field <code>bytes mic = 2;</code>
     */
    protected $mic = '';
    /**
     * Gateway MAC address(es) to use for transmitting the LoRaWAN frame.
     *
     * Generated from protobuf field <code>repeated bytes gateway_macs = 3;</code>
     */
    private $gateway_macs;
    /**
     * Set to true for sending as a gateway, or false for sending as a node.
     * In the latter case the frame will be received by other gateways.
     *
     * Generated from protobuf field <code>bool polarization_inversion = 4;</code>
     */
    protected $polarization_inversion = false;
    /**
     * Frequency (Hz) to use for the transmission.
     *
     * Generated from protobuf field <code>uint32 frequency = 5;</code>
     */
    protected $frequency = 0;
    /**
     * Data-rate to use for the transmission.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     */
    protected $dr = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $mac_payload
     *           MACPayload of the proprietary LoRaWAN frame.
     *     @type string $mic
     *           MIC of the proprietary LoRaWAN frame (must be 4 bytes).
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $gateway_macs
     *           Gateway MAC address(es) to use for transmitting the LoRaWAN frame.
     *     @type bool $polarization_inversion
     *           Set to true for sending as a gateway, or false for sending as a node.
     *           In the latter case the frame will be received by other gateways.
     *     @type int $frequency
     *           Frequency (Hz) to use for the transmission.
     *     @type int $dr
     *           Data-rate to use for the transmission.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ns\Ns::initOnce();
        parent::__construct($data);
    }

    /**
     * MACPayload of the proprietary LoRaWAN frame.
     *
     * Generated from protobuf field <code>bytes mac_payload = 1;</code>
     * @return string
     */
    public function getMacPayload()
    {
        return $this->mac_payload;
    }

    /**
     * MACPayload of the proprietary LoRaWAN frame.
     *
     * Generated from protobuf field <code>bytes mac_payload = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setMacPayload($var)
    {
        GPBUtil::checkString($var, False);
        $this->mac_payload = $var;

        return $this;
    }

    /**
     * MIC of the proprietary LoRaWAN frame (must be 4 bytes).
     *
     * Generated from protobuf field <code>bytes mic = 2;</code>
     * @return string
     */
    public function getMic()
    {
        return $this->mic;
    }

    /**
     * MIC of the proprietary LoRaWAN frame (must be 4 bytes).
     *
     * Generated from protobuf field <code>bytes mic = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setMic($var)
    {
        GPBUtil::checkString($var, False);
        $this->mic = $var;

        return $this;
    }

    /**
     * Gateway MAC address(es) to use for transmitting the LoRaWAN frame.
     *
     * Generated from protobuf field <code>repeated bytes gateway_macs = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGatewayMacs()
    {
        return $this->gateway_macs;
    }

    /**
     * Gateway MAC address(es) to use for transmitting the LoRaWAN frame.
     *
     * Generated from protobuf field <code>repeated bytes gateway_macs = 3;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGatewayMacs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->gateway_macs = $arr;

        return $this;
    }

    /**
     * Set to true for sending as a gateway, or false for sending as a node.
     * In the latter case the frame will be received by other gateways.
     *
     * Generated from protobuf field <code>bool polarization_inversion = 4;</code>
     * @return bool
     */
    public function getPolarizationInversion()
    {
        return $this->polarization_inversion;
    }

    /**
     * Set to true for sending as a gateway, or false for sending as a node.
     * In the latter case the frame will be received by other gateways.
     *
     * Generated from protobuf field <code>bool polarization_inversion = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setPolarizationInversion($var)
    {
        GPBUtil::checkBool($var);
        $this->polarization_inversion = $var;

        return $this;
    }

    /**
     * Frequency (Hz) to use for the transmission.
     *
     * Generated from protobuf field <code>uint32 frequency = 5;</code>
     * @return int
     */
    public function getFrequency()
    {
        return $this->frequency;
    }

    /**
     * Frequency (Hz) to use for the transmission.
     *
     * Generated from protobuf field <code>uint32 frequency = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setFrequency($var)
    {
        GPBUtil::checkUint32($var);
        $this->frequency = $var;

        return $this;
    }

    /**
     * Data-rate to use for the transmission.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     * @return int
     */
    public function getDr()
    {
        return $this->dr;
    }

    /**
     * Data-rate to use for the transmission.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setDr($var)
    {
        GPBUtil::checkUint32($var);
        $this->dr = $var;

        return $this;
    }

}

