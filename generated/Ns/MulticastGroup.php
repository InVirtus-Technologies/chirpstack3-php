<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ns/ns.proto

namespace Ns;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ns.MulticastGroup</code>
 */
class MulticastGroup extends \Google\Protobuf\Internal\Message
{
    /**
     * Multicast-group ID.
     * Note: this can be set on create. When left blank, a random ID will
     * be generated.
     *
     * Generated from protobuf field <code>bytes id = 1;</code>
     */
    protected $id = '';
    /**
     * Multicast Address for this group.
     *
     * Generated from protobuf field <code>bytes mc_addr = 2;</code>
     */
    protected $mc_addr = '';
    /**
     * Multicast network session key.
     *
     * Generated from protobuf field <code>bytes mc_nwk_s_key = 3;</code>
     */
    protected $mc_nwk_s_key = '';
    /**
     * Frame-counter (downlink).
     *
     * Generated from protobuf field <code>uint32 f_cnt = 4;</code>
     */
    protected $f_cnt = 0;
    /**
     * Multicast-group type (Class-B or Class-C).
     *
     * Generated from protobuf field <code>.ns.MulticastGroupType group_type = 5;</code>
     */
    protected $group_type = 0;
    /**
     * Data-rate.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     */
    protected $dr = 0;
    /**
     * Frequency (Hz).
     *
     * Generated from protobuf field <code>uint32 frequency = 7;</code>
     */
    protected $frequency = 0;
    /**
     * Ping-slot period.
     * Mandatory for Class-B multicast groups.
     *
     * Generated from protobuf field <code>uint32 ping_slot_period = 8;</code>
     */
    protected $ping_slot_period = 0;
    /**
     * Service-profile ID.
     *
     * Generated from protobuf field <code>bytes service_profile_id = 9;</code>
     */
    protected $service_profile_id = '';
    /**
     * Routing-profile ID.
     *
     * Generated from protobuf field <code>bytes routing_profile_id = 10;</code>
     */
    protected $routing_profile_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Multicast-group ID.
     *           Note: this can be set on create. When left blank, a random ID will
     *           be generated.
     *     @type string $mc_addr
     *           Multicast Address for this group.
     *     @type string $mc_nwk_s_key
     *           Multicast network session key.
     *     @type int $f_cnt
     *           Frame-counter (downlink).
     *     @type int $group_type
     *           Multicast-group type (Class-B or Class-C).
     *     @type int $dr
     *           Data-rate.
     *     @type int $frequency
     *           Frequency (Hz).
     *     @type int $ping_slot_period
     *           Ping-slot period.
     *           Mandatory for Class-B multicast groups.
     *     @type string $service_profile_id
     *           Service-profile ID.
     *     @type string $routing_profile_id
     *           Routing-profile ID.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ns\Ns::initOnce();
        parent::__construct($data);
    }

    /**
     * Multicast-group ID.
     * Note: this can be set on create. When left blank, a random ID will
     * be generated.
     *
     * Generated from protobuf field <code>bytes id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Multicast-group ID.
     * Note: this can be set on create. When left blank, a random ID will
     * be generated.
     *
     * Generated from protobuf field <code>bytes id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, False);
        $this->id = $var;

        return $this;
    }

    /**
     * Multicast Address for this group.
     *
     * Generated from protobuf field <code>bytes mc_addr = 2;</code>
     * @return string
     */
    public function getMcAddr()
    {
        return $this->mc_addr;
    }

    /**
     * Multicast Address for this group.
     *
     * Generated from protobuf field <code>bytes mc_addr = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setMcAddr($var)
    {
        GPBUtil::checkString($var, False);
        $this->mc_addr = $var;

        return $this;
    }

    /**
     * Multicast network session key.
     *
     * Generated from protobuf field <code>bytes mc_nwk_s_key = 3;</code>
     * @return string
     */
    public function getMcNwkSKey()
    {
        return $this->mc_nwk_s_key;
    }

    /**
     * Multicast network session key.
     *
     * Generated from protobuf field <code>bytes mc_nwk_s_key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setMcNwkSKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->mc_nwk_s_key = $var;

        return $this;
    }

    /**
     * Frame-counter (downlink).
     *
     * Generated from protobuf field <code>uint32 f_cnt = 4;</code>
     * @return int
     */
    public function getFCnt()
    {
        return $this->f_cnt;
    }

    /**
     * Frame-counter (downlink).
     *
     * Generated from protobuf field <code>uint32 f_cnt = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setFCnt($var)
    {
        GPBUtil::checkUint32($var);
        $this->f_cnt = $var;

        return $this;
    }

    /**
     * Multicast-group type (Class-B or Class-C).
     *
     * Generated from protobuf field <code>.ns.MulticastGroupType group_type = 5;</code>
     * @return int
     */
    public function getGroupType()
    {
        return $this->group_type;
    }

    /**
     * Multicast-group type (Class-B or Class-C).
     *
     * Generated from protobuf field <code>.ns.MulticastGroupType group_type = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setGroupType($var)
    {
        GPBUtil::checkEnum($var, \Ns\MulticastGroupType::class);
        $this->group_type = $var;

        return $this;
    }

    /**
     * Data-rate.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     * @return int
     */
    public function getDr()
    {
        return $this->dr;
    }

    /**
     * Data-rate.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setDr($var)
    {
        GPBUtil::checkUint32($var);
        $this->dr = $var;

        return $this;
    }

    /**
     * Frequency (Hz).
     *
     * Generated from protobuf field <code>uint32 frequency = 7;</code>
     * @return int
     */
    public function getFrequency()
    {
        return $this->frequency;
    }

    /**
     * Frequency (Hz).
     *
     * Generated from protobuf field <code>uint32 frequency = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setFrequency($var)
    {
        GPBUtil::checkUint32($var);
        $this->frequency = $var;

        return $this;
    }

    /**
     * Ping-slot period.
     * Mandatory for Class-B multicast groups.
     *
     * Generated from protobuf field <code>uint32 ping_slot_period = 8;</code>
     * @return int
     */
    public function getPingSlotPeriod()
    {
        return $this->ping_slot_period;
    }

    /**
     * Ping-slot period.
     * Mandatory for Class-B multicast groups.
     *
     * Generated from protobuf field <code>uint32 ping_slot_period = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setPingSlotPeriod($var)
    {
        GPBUtil::checkUint32($var);
        $this->ping_slot_period = $var;

        return $this;
    }

    /**
     * Service-profile ID.
     *
     * Generated from protobuf field <code>bytes service_profile_id = 9;</code>
     * @return string
     */
    public function getServiceProfileId()
    {
        return $this->service_profile_id;
    }

    /**
     * Service-profile ID.
     *
     * Generated from protobuf field <code>bytes service_profile_id = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setServiceProfileId($var)
    {
        GPBUtil::checkString($var, False);
        $this->service_profile_id = $var;

        return $this;
    }

    /**
     * Routing-profile ID.
     *
     * Generated from protobuf field <code>bytes routing_profile_id = 10;</code>
     * @return string
     */
    public function getRoutingProfileId()
    {
        return $this->routing_profile_id;
    }

    /**
     * Routing-profile ID.
     *
     * Generated from protobuf field <code>bytes routing_profile_id = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setRoutingProfileId($var)
    {
        GPBUtil::checkString($var, False);
        $this->routing_profile_id = $var;

        return $this;
    }

}

