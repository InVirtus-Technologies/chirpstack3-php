<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ns/ns.proto

namespace Ns;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ns.Device</code>
 */
class Device extends \Google\Protobuf\Internal\Message
{
    /**
     * DevEUI.
     *
     * Generated from protobuf field <code>bytes dev_eui = 1;</code>
     */
    protected $dev_eui = '';
    /**
     * Device-profile ID.
     *
     * Generated from protobuf field <code>bytes device_profile_id = 2;</code>
     */
    protected $device_profile_id = '';
    /**
     * Service-profile ID.
     *
     * Generated from protobuf field <code>bytes service_profile_id = 3;</code>
     */
    protected $service_profile_id = '';
    /**
     * Routing-profile ID.
     *
     * Generated from protobuf field <code>bytes routing_profile_id = 4;</code>
     */
    protected $routing_profile_id = '';
    /**
     * Skip frame-counter check.
     * Note that turning this on is insecure and is intended for debugging only.
     *
     * Generated from protobuf field <code>bool skip_f_cnt_check = 5;</code>
     */
    protected $skip_f_cnt_check = false;
    /**
     * Reference altitude.
     * When using geolocation, this altitude will be used as a reference
     * (when supported by the geolocation-server) to increase geolocation
     * accuracy.
     *
     * Generated from protobuf field <code>double reference_altitude = 6;</code>
     */
    protected $reference_altitude = 0.0;
    /**
     * Device is disabled.
     *
     * Generated from protobuf field <code>bool is_disabled = 7;</code>
     */
    protected $is_disabled = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $dev_eui
     *           DevEUI.
     *     @type string $device_profile_id
     *           Device-profile ID.
     *     @type string $service_profile_id
     *           Service-profile ID.
     *     @type string $routing_profile_id
     *           Routing-profile ID.
     *     @type bool $skip_f_cnt_check
     *           Skip frame-counter check.
     *           Note that turning this on is insecure and is intended for debugging only.
     *     @type float $reference_altitude
     *           Reference altitude.
     *           When using geolocation, this altitude will be used as a reference
     *           (when supported by the geolocation-server) to increase geolocation
     *           accuracy.
     *     @type bool $is_disabled
     *           Device is disabled.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ns\Ns::initOnce();
        parent::__construct($data);
    }

    /**
     * DevEUI.
     *
     * Generated from protobuf field <code>bytes dev_eui = 1;</code>
     * @return string
     */
    public function getDevEui()
    {
        return $this->dev_eui;
    }

    /**
     * DevEUI.
     *
     * Generated from protobuf field <code>bytes dev_eui = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDevEui($var)
    {
        GPBUtil::checkString($var, False);
        $this->dev_eui = $var;

        return $this;
    }

    /**
     * Device-profile ID.
     *
     * Generated from protobuf field <code>bytes device_profile_id = 2;</code>
     * @return string
     */
    public function getDeviceProfileId()
    {
        return $this->device_profile_id;
    }

    /**
     * Device-profile ID.
     *
     * Generated from protobuf field <code>bytes device_profile_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDeviceProfileId($var)
    {
        GPBUtil::checkString($var, False);
        $this->device_profile_id = $var;

        return $this;
    }

    /**
     * Service-profile ID.
     *
     * Generated from protobuf field <code>bytes service_profile_id = 3;</code>
     * @return string
     */
    public function getServiceProfileId()
    {
        return $this->service_profile_id;
    }

    /**
     * Service-profile ID.
     *
     * Generated from protobuf field <code>bytes service_profile_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setServiceProfileId($var)
    {
        GPBUtil::checkString($var, False);
        $this->service_profile_id = $var;

        return $this;
    }

    /**
     * Routing-profile ID.
     *
     * Generated from protobuf field <code>bytes routing_profile_id = 4;</code>
     * @return string
     */
    public function getRoutingProfileId()
    {
        return $this->routing_profile_id;
    }

    /**
     * Routing-profile ID.
     *
     * Generated from protobuf field <code>bytes routing_profile_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setRoutingProfileId($var)
    {
        GPBUtil::checkString($var, False);
        $this->routing_profile_id = $var;

        return $this;
    }

    /**
     * Skip frame-counter check.
     * Note that turning this on is insecure and is intended for debugging only.
     *
     * Generated from protobuf field <code>bool skip_f_cnt_check = 5;</code>
     * @return bool
     */
    public function getSkipFCntCheck()
    {
        return $this->skip_f_cnt_check;
    }

    /**
     * Skip frame-counter check.
     * Note that turning this on is insecure and is intended for debugging only.
     *
     * Generated from protobuf field <code>bool skip_f_cnt_check = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setSkipFCntCheck($var)
    {
        GPBUtil::checkBool($var);
        $this->skip_f_cnt_check = $var;

        return $this;
    }

    /**
     * Reference altitude.
     * When using geolocation, this altitude will be used as a reference
     * (when supported by the geolocation-server) to increase geolocation
     * accuracy.
     *
     * Generated from protobuf field <code>double reference_altitude = 6;</code>
     * @return float
     */
    public function getReferenceAltitude()
    {
        return $this->reference_altitude;
    }

    /**
     * Reference altitude.
     * When using geolocation, this altitude will be used as a reference
     * (when supported by the geolocation-server) to increase geolocation
     * accuracy.
     *
     * Generated from protobuf field <code>double reference_altitude = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setReferenceAltitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->reference_altitude = $var;

        return $this;
    }

    /**
     * Device is disabled.
     *
     * Generated from protobuf field <code>bool is_disabled = 7;</code>
     * @return bool
     */
    public function getIsDisabled()
    {
        return $this->is_disabled;
    }

    /**
     * Device is disabled.
     *
     * Generated from protobuf field <code>bool is_disabled = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsDisabled($var)
    {
        GPBUtil::checkBool($var);
        $this->is_disabled = $var;

        return $this;
    }

}

