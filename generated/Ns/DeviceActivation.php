<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ns/ns.proto

namespace Ns;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ns.DeviceActivation</code>
 */
class DeviceActivation extends \Google\Protobuf\Internal\Message
{
    /**
     * DevEUI.
     *
     * Generated from protobuf field <code>bytes dev_eui = 1;</code>
     */
    protected $dev_eui = '';
    /**
     * Device address (DevAddr).
     *
     * Generated from protobuf field <code>bytes dev_addr = 2;</code>
     */
    protected $dev_addr = '';
    /**
     * SNwkSIntKey (serving network-server session integrity key).
     *
     * Generated from protobuf field <code>bytes s_nwk_s_int_key = 3;</code>
     */
    protected $s_nwk_s_int_key = '';
    /**
     * FNwkSIntKey (forwarding network-server session integrity key).
     *
     * Generated from protobuf field <code>bytes f_nwk_s_int_key = 4;</code>
     */
    protected $f_nwk_s_int_key = '';
    /**
     * NwkSEncKey (network-server session encryption key).
     *
     * Generated from protobuf field <code>bytes nwk_s_enc_key = 5;</code>
     */
    protected $nwk_s_enc_key = '';
    /**
     * The next expected uplink frame-counter.
     *
     * Generated from protobuf field <code>uint32 f_cnt_up = 6;</code>
     */
    protected $f_cnt_up = 0;
    /**
     * The network frame-counter used for the next downlink frame.
     *
     * Generated from protobuf field <code>uint32 n_f_cnt_down = 7;</code>
     */
    protected $n_f_cnt_down = 0;
    /**
     * The application frame-counter used for the next downlink frame (LoRaWAN 1.1).
     *
     * Generated from protobuf field <code>uint32 a_f_cnt_down = 8;</code>
     */
    protected $a_f_cnt_down = 0;
    /**
     * Skip frame-counter checks (this is insecure, but could be helpful for debugging).
     *
     * Generated from protobuf field <code>bool skip_f_cnt_check = 9;</code>
     */
    protected $skip_f_cnt_check = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $dev_eui
     *           DevEUI.
     *     @type string $dev_addr
     *           Device address (DevAddr).
     *     @type string $s_nwk_s_int_key
     *           SNwkSIntKey (serving network-server session integrity key).
     *     @type string $f_nwk_s_int_key
     *           FNwkSIntKey (forwarding network-server session integrity key).
     *     @type string $nwk_s_enc_key
     *           NwkSEncKey (network-server session encryption key).
     *     @type int $f_cnt_up
     *           The next expected uplink frame-counter.
     *     @type int $n_f_cnt_down
     *           The network frame-counter used for the next downlink frame.
     *     @type int $a_f_cnt_down
     *           The application frame-counter used for the next downlink frame (LoRaWAN 1.1).
     *     @type bool $skip_f_cnt_check
     *           Skip frame-counter checks (this is insecure, but could be helpful for debugging).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ns\Ns::initOnce();
        parent::__construct($data);
    }

    /**
     * DevEUI.
     *
     * Generated from protobuf field <code>bytes dev_eui = 1;</code>
     * @return string
     */
    public function getDevEui()
    {
        return $this->dev_eui;
    }

    /**
     * DevEUI.
     *
     * Generated from protobuf field <code>bytes dev_eui = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDevEui($var)
    {
        GPBUtil::checkString($var, False);
        $this->dev_eui = $var;

        return $this;
    }

    /**
     * Device address (DevAddr).
     *
     * Generated from protobuf field <code>bytes dev_addr = 2;</code>
     * @return string
     */
    public function getDevAddr()
    {
        return $this->dev_addr;
    }

    /**
     * Device address (DevAddr).
     *
     * Generated from protobuf field <code>bytes dev_addr = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDevAddr($var)
    {
        GPBUtil::checkString($var, False);
        $this->dev_addr = $var;

        return $this;
    }

    /**
     * SNwkSIntKey (serving network-server session integrity key).
     *
     * Generated from protobuf field <code>bytes s_nwk_s_int_key = 3;</code>
     * @return string
     */
    public function getSNwkSIntKey()
    {
        return $this->s_nwk_s_int_key;
    }

    /**
     * SNwkSIntKey (serving network-server session integrity key).
     *
     * Generated from protobuf field <code>bytes s_nwk_s_int_key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSNwkSIntKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->s_nwk_s_int_key = $var;

        return $this;
    }

    /**
     * FNwkSIntKey (forwarding network-server session integrity key).
     *
     * Generated from protobuf field <code>bytes f_nwk_s_int_key = 4;</code>
     * @return string
     */
    public function getFNwkSIntKey()
    {
        return $this->f_nwk_s_int_key;
    }

    /**
     * FNwkSIntKey (forwarding network-server session integrity key).
     *
     * Generated from protobuf field <code>bytes f_nwk_s_int_key = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setFNwkSIntKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->f_nwk_s_int_key = $var;

        return $this;
    }

    /**
     * NwkSEncKey (network-server session encryption key).
     *
     * Generated from protobuf field <code>bytes nwk_s_enc_key = 5;</code>
     * @return string
     */
    public function getNwkSEncKey()
    {
        return $this->nwk_s_enc_key;
    }

    /**
     * NwkSEncKey (network-server session encryption key).
     *
     * Generated from protobuf field <code>bytes nwk_s_enc_key = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setNwkSEncKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->nwk_s_enc_key = $var;

        return $this;
    }

    /**
     * The next expected uplink frame-counter.
     *
     * Generated from protobuf field <code>uint32 f_cnt_up = 6;</code>
     * @return int
     */
    public function getFCntUp()
    {
        return $this->f_cnt_up;
    }

    /**
     * The next expected uplink frame-counter.
     *
     * Generated from protobuf field <code>uint32 f_cnt_up = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setFCntUp($var)
    {
        GPBUtil::checkUint32($var);
        $this->f_cnt_up = $var;

        return $this;
    }

    /**
     * The network frame-counter used for the next downlink frame.
     *
     * Generated from protobuf field <code>uint32 n_f_cnt_down = 7;</code>
     * @return int
     */
    public function getNFCntDown()
    {
        return $this->n_f_cnt_down;
    }

    /**
     * The network frame-counter used for the next downlink frame.
     *
     * Generated from protobuf field <code>uint32 n_f_cnt_down = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setNFCntDown($var)
    {
        GPBUtil::checkUint32($var);
        $this->n_f_cnt_down = $var;

        return $this;
    }

    /**
     * The application frame-counter used for the next downlink frame (LoRaWAN 1.1).
     *
     * Generated from protobuf field <code>uint32 a_f_cnt_down = 8;</code>
     * @return int
     */
    public function getAFCntDown()
    {
        return $this->a_f_cnt_down;
    }

    /**
     * The application frame-counter used for the next downlink frame (LoRaWAN 1.1).
     *
     * Generated from protobuf field <code>uint32 a_f_cnt_down = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setAFCntDown($var)
    {
        GPBUtil::checkUint32($var);
        $this->a_f_cnt_down = $var;

        return $this;
    }

    /**
     * Skip frame-counter checks (this is insecure, but could be helpful for debugging).
     *
     * Generated from protobuf field <code>bool skip_f_cnt_check = 9;</code>
     * @return bool
     */
    public function getSkipFCntCheck()
    {
        return $this->skip_f_cnt_check;
    }

    /**
     * Skip frame-counter checks (this is insecure, but could be helpful for debugging).
     *
     * Generated from protobuf field <code>bool skip_f_cnt_check = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setSkipFCntCheck($var)
    {
        GPBUtil::checkBool($var);
        $this->skip_f_cnt_check = $var;

        return $this;
    }

}

