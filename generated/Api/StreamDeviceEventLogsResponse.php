<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: as/external/api/device.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.StreamDeviceEventLogsResponse</code>
 */
class StreamDeviceEventLogsResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The event type.
     *
     * Generated from protobuf field <code>string type = 1;</code>
     */
    protected $type = '';
    /**
     * The event payload in JSON encoding.
     *
     * Generated from protobuf field <code>string payload_json = 2 [json_name = "payloadJSON"];</code>
     */
    protected $payload_json = '';
    /**
     * Published at timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp published_at = 3;</code>
     */
    protected $published_at = null;
    /**
     * Stream ID.
     *
     * Generated from protobuf field <code>string stream_id = 4 [json_name = "streamID"];</code>
     */
    protected $stream_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $type
     *           The event type.
     *     @type string $payload_json
     *           The event payload in JSON encoding.
     *     @type \Google\Protobuf\Timestamp $published_at
     *           Published at timestamp.
     *     @type string $stream_id
     *           Stream ID.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBAs\External\Api\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * The event type.
     *
     * Generated from protobuf field <code>string type = 1;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * The event type.
     *
     * Generated from protobuf field <code>string type = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * The event payload in JSON encoding.
     *
     * Generated from protobuf field <code>string payload_json = 2 [json_name = "payloadJSON"];</code>
     * @return string
     */
    public function getPayloadJson()
    {
        return $this->payload_json;
    }

    /**
     * The event payload in JSON encoding.
     *
     * Generated from protobuf field <code>string payload_json = 2 [json_name = "payloadJSON"];</code>
     * @param string $var
     * @return $this
     */
    public function setPayloadJson($var)
    {
        GPBUtil::checkString($var, True);
        $this->payload_json = $var;

        return $this;
    }

    /**
     * Published at timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp published_at = 3;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getPublishedAt()
    {
        return $this->published_at;
    }

    public function hasPublishedAt()
    {
        return isset($this->published_at);
    }

    public function clearPublishedAt()
    {
        unset($this->published_at);
    }

    /**
     * Published at timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp published_at = 3;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPublishedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->published_at = $var;

        return $this;
    }

    /**
     * Stream ID.
     *
     * Generated from protobuf field <code>string stream_id = 4 [json_name = "streamID"];</code>
     * @return string
     */
    public function getStreamId()
    {
        return $this->stream_id;
    }

    /**
     * Stream ID.
     *
     * Generated from protobuf field <code>string stream_id = 4 [json_name = "streamID"];</code>
     * @param string $var
     * @return $this
     */
    public function setStreamId($var)
    {
        GPBUtil::checkString($var, True);
        $this->stream_id = $var;

        return $this;
    }

}

