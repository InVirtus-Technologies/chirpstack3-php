<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: as/external/api/networkServer.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.NetworkServer</code>
 */
class NetworkServer extends \Google\Protobuf\Internal\Message
{
    /**
     * Network-server ID.
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Network-server name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Network-server server.
     * Format: hostname:ip (e.g. localhost:8000).
     *
     * Generated from protobuf field <code>string server = 3;</code>
     */
    protected $server = '';
    /**
     * CA certificate (optional).
     *
     * Generated from protobuf field <code>string ca_cert = 4;</code>
     */
    protected $ca_cert = '';
    /**
     * TLS (client) certificate for connecting to the network-server (optional).
     *
     * Generated from protobuf field <code>string tls_cert = 5;</code>
     */
    protected $tls_cert = '';
    /**
     * TLS (client) key for connecting to the network-server (optional).
     *
     * Generated from protobuf field <code>string tls_key = 6;</code>
     */
    protected $tls_key = '';
    /**
     * Routing-profile ca certificate (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_ca_cert = 7 [json_name = "routingProfileCACert"];</code>
     */
    protected $routing_profile_ca_cert = '';
    /**
     * Routing-profile TLS certificate (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_tls_cert = 8 [json_name = "routingProfileTLSCert"];</code>
     */
    protected $routing_profile_tls_cert = '';
    /**
     * Routing-profile TLS key (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_tls_key = 9 [json_name = "routingProfileTLSKey"];</code>
     */
    protected $routing_profile_tls_key = '';
    /**
     * Enable gateway discovery for this network-server.
     *
     * Generated from protobuf field <code>bool gateway_discovery_enabled = 10;</code>
     */
    protected $gateway_discovery_enabled = false;
    /**
     * The number of times per day the gateway discovery 'ping' must be
     * broadcasted per gateway.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_interval = 11;</code>
     */
    protected $gateway_discovery_interval = 0;
    /**
     * The frequency (Hz) of the gateway discovery 'ping'.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_tx_frequency = 12 [json_name = "gatewayDiscoveryTXFrequency"];</code>
     */
    protected $gateway_discovery_tx_frequency = 0;
    /**
     * The data-rate of the gateway discovery 'ping'.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_dr = 13 [json_name = "gatewayDiscoveryDR"];</code>
     */
    protected $gateway_discovery_dr = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *           Network-server ID.
     *     @type string $name
     *           Network-server name.
     *     @type string $server
     *           Network-server server.
     *           Format: hostname:ip (e.g. localhost:8000).
     *     @type string $ca_cert
     *           CA certificate (optional).
     *     @type string $tls_cert
     *           TLS (client) certificate for connecting to the network-server (optional).
     *     @type string $tls_key
     *           TLS (client) key for connecting to the network-server (optional).
     *     @type string $routing_profile_ca_cert
     *           Routing-profile ca certificate (used by the network-server to connect
     *           back to the application-server) (optional).
     *     @type string $routing_profile_tls_cert
     *           Routing-profile TLS certificate (used by the network-server to connect
     *           back to the application-server) (optional).
     *     @type string $routing_profile_tls_key
     *           Routing-profile TLS key (used by the network-server to connect
     *           back to the application-server) (optional).
     *     @type bool $gateway_discovery_enabled
     *           Enable gateway discovery for this network-server.
     *     @type int $gateway_discovery_interval
     *           The number of times per day the gateway discovery 'ping' must be
     *           broadcasted per gateway.
     *     @type int $gateway_discovery_tx_frequency
     *           The frequency (Hz) of the gateway discovery 'ping'.
     *     @type int $gateway_discovery_dr
     *           The data-rate of the gateway discovery 'ping'.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBAs\External\Api\NetworkServer::initOnce();
        parent::__construct($data);
    }

    /**
     * Network-server ID.
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Network-server ID.
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Network-server name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Network-server name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Network-server server.
     * Format: hostname:ip (e.g. localhost:8000).
     *
     * Generated from protobuf field <code>string server = 3;</code>
     * @return string
     */
    public function getServer()
    {
        return $this->server;
    }

    /**
     * Network-server server.
     * Format: hostname:ip (e.g. localhost:8000).
     *
     * Generated from protobuf field <code>string server = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setServer($var)
    {
        GPBUtil::checkString($var, True);
        $this->server = $var;

        return $this;
    }

    /**
     * CA certificate (optional).
     *
     * Generated from protobuf field <code>string ca_cert = 4;</code>
     * @return string
     */
    public function getCaCert()
    {
        return $this->ca_cert;
    }

    /**
     * CA certificate (optional).
     *
     * Generated from protobuf field <code>string ca_cert = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCaCert($var)
    {
        GPBUtil::checkString($var, True);
        $this->ca_cert = $var;

        return $this;
    }

    /**
     * TLS (client) certificate for connecting to the network-server (optional).
     *
     * Generated from protobuf field <code>string tls_cert = 5;</code>
     * @return string
     */
    public function getTlsCert()
    {
        return $this->tls_cert;
    }

    /**
     * TLS (client) certificate for connecting to the network-server (optional).
     *
     * Generated from protobuf field <code>string tls_cert = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setTlsCert($var)
    {
        GPBUtil::checkString($var, True);
        $this->tls_cert = $var;

        return $this;
    }

    /**
     * TLS (client) key for connecting to the network-server (optional).
     *
     * Generated from protobuf field <code>string tls_key = 6;</code>
     * @return string
     */
    public function getTlsKey()
    {
        return $this->tls_key;
    }

    /**
     * TLS (client) key for connecting to the network-server (optional).
     *
     * Generated from protobuf field <code>string tls_key = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setTlsKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->tls_key = $var;

        return $this;
    }

    /**
     * Routing-profile ca certificate (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_ca_cert = 7 [json_name = "routingProfileCACert"];</code>
     * @return string
     */
    public function getRoutingProfileCaCert()
    {
        return $this->routing_profile_ca_cert;
    }

    /**
     * Routing-profile ca certificate (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_ca_cert = 7 [json_name = "routingProfileCACert"];</code>
     * @param string $var
     * @return $this
     */
    public function setRoutingProfileCaCert($var)
    {
        GPBUtil::checkString($var, True);
        $this->routing_profile_ca_cert = $var;

        return $this;
    }

    /**
     * Routing-profile TLS certificate (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_tls_cert = 8 [json_name = "routingProfileTLSCert"];</code>
     * @return string
     */
    public function getRoutingProfileTlsCert()
    {
        return $this->routing_profile_tls_cert;
    }

    /**
     * Routing-profile TLS certificate (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_tls_cert = 8 [json_name = "routingProfileTLSCert"];</code>
     * @param string $var
     * @return $this
     */
    public function setRoutingProfileTlsCert($var)
    {
        GPBUtil::checkString($var, True);
        $this->routing_profile_tls_cert = $var;

        return $this;
    }

    /**
     * Routing-profile TLS key (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_tls_key = 9 [json_name = "routingProfileTLSKey"];</code>
     * @return string
     */
    public function getRoutingProfileTlsKey()
    {
        return $this->routing_profile_tls_key;
    }

    /**
     * Routing-profile TLS key (used by the network-server to connect
     * back to the application-server) (optional).
     *
     * Generated from protobuf field <code>string routing_profile_tls_key = 9 [json_name = "routingProfileTLSKey"];</code>
     * @param string $var
     * @return $this
     */
    public function setRoutingProfileTlsKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->routing_profile_tls_key = $var;

        return $this;
    }

    /**
     * Enable gateway discovery for this network-server.
     *
     * Generated from protobuf field <code>bool gateway_discovery_enabled = 10;</code>
     * @return bool
     */
    public function getGatewayDiscoveryEnabled()
    {
        return $this->gateway_discovery_enabled;
    }

    /**
     * Enable gateway discovery for this network-server.
     *
     * Generated from protobuf field <code>bool gateway_discovery_enabled = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setGatewayDiscoveryEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->gateway_discovery_enabled = $var;

        return $this;
    }

    /**
     * The number of times per day the gateway discovery 'ping' must be
     * broadcasted per gateway.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_interval = 11;</code>
     * @return int
     */
    public function getGatewayDiscoveryInterval()
    {
        return $this->gateway_discovery_interval;
    }

    /**
     * The number of times per day the gateway discovery 'ping' must be
     * broadcasted per gateway.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_interval = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setGatewayDiscoveryInterval($var)
    {
        GPBUtil::checkUint32($var);
        $this->gateway_discovery_interval = $var;

        return $this;
    }

    /**
     * The frequency (Hz) of the gateway discovery 'ping'.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_tx_frequency = 12 [json_name = "gatewayDiscoveryTXFrequency"];</code>
     * @return int
     */
    public function getGatewayDiscoveryTxFrequency()
    {
        return $this->gateway_discovery_tx_frequency;
    }

    /**
     * The frequency (Hz) of the gateway discovery 'ping'.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_tx_frequency = 12 [json_name = "gatewayDiscoveryTXFrequency"];</code>
     * @param int $var
     * @return $this
     */
    public function setGatewayDiscoveryTxFrequency($var)
    {
        GPBUtil::checkUint32($var);
        $this->gateway_discovery_tx_frequency = $var;

        return $this;
    }

    /**
     * The data-rate of the gateway discovery 'ping'.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_dr = 13 [json_name = "gatewayDiscoveryDR"];</code>
     * @return int
     */
    public function getGatewayDiscoveryDr()
    {
        return $this->gateway_discovery_dr;
    }

    /**
     * The data-rate of the gateway discovery 'ping'.
     *
     * Generated from protobuf field <code>uint32 gateway_discovery_dr = 13 [json_name = "gatewayDiscoveryDR"];</code>
     * @param int $var
     * @return $this
     */
    public function setGatewayDiscoveryDr($var)
    {
        GPBUtil::checkUint32($var);
        $this->gateway_discovery_dr = $var;

        return $this;
    }

}

