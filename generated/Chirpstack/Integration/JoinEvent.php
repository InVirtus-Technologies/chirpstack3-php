<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: integration/integration.proto

namespace Chirpstack\Integration;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * JoinEvent is the message sent when a device joined the network.
 * Note: this event is sent at the first uplink after OTAA.
 *
 * Generated from protobuf message <code>integration.JoinEvent</code>
 */
class JoinEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Deduplication ID (UUID).
     *
     * Generated from protobuf field <code>string deduplication_id = 1;</code>
     */
    protected $deduplication_id = '';
    /**
     * Timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     */
    protected $time = null;
    /**
     * Device info.
     *
     * Generated from protobuf field <code>.integration.DeviceInfo device_info = 3;</code>
     */
    protected $device_info = null;
    /**
     * Device address.
     *
     * Generated from protobuf field <code>string dev_addr = 4;</code>
     */
    protected $dev_addr = '';
    /**
     * Relay info.
     *
     * Generated from protobuf field <code>.integration.UplinkRelayRxInfo relay_rx_info = 5;</code>
     */
    protected $relay_rx_info = null;
    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 6;</code>
     */
    protected $join_server_context = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $deduplication_id
     *           Deduplication ID (UUID).
     *     @type \Google\Protobuf\Timestamp $time
     *           Timestamp.
     *     @type \Chirpstack\Integration\DeviceInfo $device_info
     *           Device info.
     *     @type string $dev_addr
     *           Device address.
     *     @type \Chirpstack\Integration\UplinkRelayRxInfo $relay_rx_info
     *           Relay info.
     *     @type \Chirpstack\Common\JoinServerContext $join_server_context
     *           Join-Server context.
     *           A non-empty value indicatest that ChirpStack does not have access to
     *           the AppSKey and that the encryption / decryption of the payloads is
     *           the responsibility of the end-application.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chirpstack\Integration\Integration::initOnce();
        parent::__construct($data);
    }

    /**
     * Deduplication ID (UUID).
     *
     * Generated from protobuf field <code>string deduplication_id = 1;</code>
     * @return string
     */
    public function getDeduplicationId()
    {
        return $this->deduplication_id;
    }

    /**
     * Deduplication ID (UUID).
     *
     * Generated from protobuf field <code>string deduplication_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDeduplicationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->deduplication_id = $var;

        return $this;
    }

    /**
     * Timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTime()
    {
        return $this->time;
    }

    public function hasTime()
    {
        return isset($this->time);
    }

    public function clearTime()
    {
        unset($this->time);
    }

    /**
     * Timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->time = $var;

        return $this;
    }

    /**
     * Device info.
     *
     * Generated from protobuf field <code>.integration.DeviceInfo device_info = 3;</code>
     * @return \Chirpstack\Integration\DeviceInfo|null
     */
    public function getDeviceInfo()
    {
        return $this->device_info;
    }

    public function hasDeviceInfo()
    {
        return isset($this->device_info);
    }

    public function clearDeviceInfo()
    {
        unset($this->device_info);
    }

    /**
     * Device info.
     *
     * Generated from protobuf field <code>.integration.DeviceInfo device_info = 3;</code>
     * @param \Chirpstack\Integration\DeviceInfo $var
     * @return $this
     */
    public function setDeviceInfo($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Integration\DeviceInfo::class);
        $this->device_info = $var;

        return $this;
    }

    /**
     * Device address.
     *
     * Generated from protobuf field <code>string dev_addr = 4;</code>
     * @return string
     */
    public function getDevAddr()
    {
        return $this->dev_addr;
    }

    /**
     * Device address.
     *
     * Generated from protobuf field <code>string dev_addr = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setDevAddr($var)
    {
        GPBUtil::checkString($var, True);
        $this->dev_addr = $var;

        return $this;
    }

    /**
     * Relay info.
     *
     * Generated from protobuf field <code>.integration.UplinkRelayRxInfo relay_rx_info = 5;</code>
     * @return \Chirpstack\Integration\UplinkRelayRxInfo|null
     */
    public function getRelayRxInfo()
    {
        return $this->relay_rx_info;
    }

    public function hasRelayRxInfo()
    {
        return isset($this->relay_rx_info);
    }

    public function clearRelayRxInfo()
    {
        unset($this->relay_rx_info);
    }

    /**
     * Relay info.
     *
     * Generated from protobuf field <code>.integration.UplinkRelayRxInfo relay_rx_info = 5;</code>
     * @param \Chirpstack\Integration\UplinkRelayRxInfo $var
     * @return $this
     */
    public function setRelayRxInfo($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Integration\UplinkRelayRxInfo::class);
        $this->relay_rx_info = $var;

        return $this;
    }

    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 6;</code>
     * @return \Chirpstack\Common\JoinServerContext|null
     */
    public function getJoinServerContext()
    {
        return $this->join_server_context;
    }

    public function hasJoinServerContext()
    {
        return isset($this->join_server_context);
    }

    public function clearJoinServerContext()
    {
        unset($this->join_server_context);
    }

    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 6;</code>
     * @param \Chirpstack\Common\JoinServerContext $var
     * @return $this
     */
    public function setJoinServerContext($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Common\JoinServerContext::class);
        $this->join_server_context = $var;

        return $this;
    }

}

