<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: integration/integration.proto

namespace Chirpstack\Integration;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * UplinkEvent is the message sent when an uplink payload has been received.
 *
 * Generated from protobuf message <code>integration.UplinkEvent</code>
 */
class UplinkEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Deduplication ID (UUID).
     *
     * Generated from protobuf field <code>string deduplication_id = 1;</code>
     */
    protected $deduplication_id = '';
    /**
     * Timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     */
    protected $time = null;
    /**
     * Device information.
     *
     * Generated from protobuf field <code>.integration.DeviceInfo device_info = 3;</code>
     */
    protected $device_info = null;
    /**
     * Device address.
     *
     * Generated from protobuf field <code>string dev_addr = 4;</code>
     */
    protected $dev_addr = '';
    /**
     * Device has ADR bit set.
     *
     * Generated from protobuf field <code>bool adr = 5;</code>
     */
    protected $adr = false;
    /**
     * Data-rate.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     */
    protected $dr = 0;
    /**
     * Frame counter.
     *
     * Generated from protobuf field <code>uint32 f_cnt = 7;</code>
     */
    protected $f_cnt = 0;
    /**
     * Frame port.
     *
     * Generated from protobuf field <code>uint32 f_port = 8;</code>
     */
    protected $f_port = 0;
    /**
     * Uplink was of type confirmed.
     *
     * Generated from protobuf field <code>bool confirmed = 9;</code>
     */
    protected $confirmed = false;
    /**
     * FRMPayload data.
     *
     * Generated from protobuf field <code>bytes data = 10;</code>
     */
    protected $data = '';
    /**
     * Note that this is only set when a codec is configured in the Device
     * Profile.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct object = 11;</code>
     */
    protected $object = null;
    /**
     * Receiving gateway RX info.
     *
     * Generated from protobuf field <code>repeated .gw.UplinkRxInfo rx_info = 12;</code>
     */
    private $rx_info;
    /**
     * TX info.
     *
     * Generated from protobuf field <code>.gw.UplinkTxInfo tx_info = 13;</code>
     */
    protected $tx_info = null;
    /**
     * Relay info.
     *
     * Generated from protobuf field <code>.integration.UplinkRelayRxInfo relay_rx_info = 14;</code>
     */
    protected $relay_rx_info = null;
    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 15;</code>
     */
    protected $join_server_context = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $deduplication_id
     *           Deduplication ID (UUID).
     *     @type \Google\Protobuf\Timestamp $time
     *           Timestamp.
     *     @type \Chirpstack\Integration\DeviceInfo $device_info
     *           Device information.
     *     @type string $dev_addr
     *           Device address.
     *     @type bool $adr
     *           Device has ADR bit set.
     *     @type int $dr
     *           Data-rate.
     *     @type int $f_cnt
     *           Frame counter.
     *     @type int $f_port
     *           Frame port.
     *     @type bool $confirmed
     *           Uplink was of type confirmed.
     *     @type string $data
     *           FRMPayload data.
     *     @type \Google\Protobuf\Struct $object
     *           Note that this is only set when a codec is configured in the Device
     *           Profile.
     *     @type array<\Chirpstack\Gateway\UplinkRxInfo>|\Google\Protobuf\Internal\RepeatedField $rx_info
     *           Receiving gateway RX info.
     *     @type \Chirpstack\Gateway\UplinkTxInfo $tx_info
     *           TX info.
     *     @type \Chirpstack\Integration\UplinkRelayRxInfo $relay_rx_info
     *           Relay info.
     *     @type \Chirpstack\Common\JoinServerContext $join_server_context
     *           Join-Server context.
     *           A non-empty value indicatest that ChirpStack does not have access to
     *           the AppSKey and that the encryption / decryption of the payloads is
     *           the responsibility of the end-application.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chirpstack\Integration\Integration::initOnce();
        parent::__construct($data);
    }

    /**
     * Deduplication ID (UUID).
     *
     * Generated from protobuf field <code>string deduplication_id = 1;</code>
     * @return string
     */
    public function getDeduplicationId()
    {
        return $this->deduplication_id;
    }

    /**
     * Deduplication ID (UUID).
     *
     * Generated from protobuf field <code>string deduplication_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDeduplicationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->deduplication_id = $var;

        return $this;
    }

    /**
     * Timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTime()
    {
        return $this->time;
    }

    public function hasTime()
    {
        return isset($this->time);
    }

    public function clearTime()
    {
        unset($this->time);
    }

    /**
     * Timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->time = $var;

        return $this;
    }

    /**
     * Device information.
     *
     * Generated from protobuf field <code>.integration.DeviceInfo device_info = 3;</code>
     * @return \Chirpstack\Integration\DeviceInfo|null
     */
    public function getDeviceInfo()
    {
        return $this->device_info;
    }

    public function hasDeviceInfo()
    {
        return isset($this->device_info);
    }

    public function clearDeviceInfo()
    {
        unset($this->device_info);
    }

    /**
     * Device information.
     *
     * Generated from protobuf field <code>.integration.DeviceInfo device_info = 3;</code>
     * @param \Chirpstack\Integration\DeviceInfo $var
     * @return $this
     */
    public function setDeviceInfo($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Integration\DeviceInfo::class);
        $this->device_info = $var;

        return $this;
    }

    /**
     * Device address.
     *
     * Generated from protobuf field <code>string dev_addr = 4;</code>
     * @return string
     */
    public function getDevAddr()
    {
        return $this->dev_addr;
    }

    /**
     * Device address.
     *
     * Generated from protobuf field <code>string dev_addr = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setDevAddr($var)
    {
        GPBUtil::checkString($var, True);
        $this->dev_addr = $var;

        return $this;
    }

    /**
     * Device has ADR bit set.
     *
     * Generated from protobuf field <code>bool adr = 5;</code>
     * @return bool
     */
    public function getAdr()
    {
        return $this->adr;
    }

    /**
     * Device has ADR bit set.
     *
     * Generated from protobuf field <code>bool adr = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setAdr($var)
    {
        GPBUtil::checkBool($var);
        $this->adr = $var;

        return $this;
    }

    /**
     * Data-rate.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     * @return int
     */
    public function getDr()
    {
        return $this->dr;
    }

    /**
     * Data-rate.
     *
     * Generated from protobuf field <code>uint32 dr = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setDr($var)
    {
        GPBUtil::checkUint32($var);
        $this->dr = $var;

        return $this;
    }

    /**
     * Frame counter.
     *
     * Generated from protobuf field <code>uint32 f_cnt = 7;</code>
     * @return int
     */
    public function getFCnt()
    {
        return $this->f_cnt;
    }

    /**
     * Frame counter.
     *
     * Generated from protobuf field <code>uint32 f_cnt = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setFCnt($var)
    {
        GPBUtil::checkUint32($var);
        $this->f_cnt = $var;

        return $this;
    }

    /**
     * Frame port.
     *
     * Generated from protobuf field <code>uint32 f_port = 8;</code>
     * @return int
     */
    public function getFPort()
    {
        return $this->f_port;
    }

    /**
     * Frame port.
     *
     * Generated from protobuf field <code>uint32 f_port = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setFPort($var)
    {
        GPBUtil::checkUint32($var);
        $this->f_port = $var;

        return $this;
    }

    /**
     * Uplink was of type confirmed.
     *
     * Generated from protobuf field <code>bool confirmed = 9;</code>
     * @return bool
     */
    public function getConfirmed()
    {
        return $this->confirmed;
    }

    /**
     * Uplink was of type confirmed.
     *
     * Generated from protobuf field <code>bool confirmed = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setConfirmed($var)
    {
        GPBUtil::checkBool($var);
        $this->confirmed = $var;

        return $this;
    }

    /**
     * FRMPayload data.
     *
     * Generated from protobuf field <code>bytes data = 10;</code>
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * FRMPayload data.
     *
     * Generated from protobuf field <code>bytes data = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkString($var, False);
        $this->data = $var;

        return $this;
    }

    /**
     * Note that this is only set when a codec is configured in the Device
     * Profile.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct object = 11;</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getObject()
    {
        return $this->object;
    }

    public function hasObject()
    {
        return isset($this->object);
    }

    public function clearObject()
    {
        unset($this->object);
    }

    /**
     * Note that this is only set when a codec is configured in the Device
     * Profile.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct object = 11;</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setObject($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->object = $var;

        return $this;
    }

    /**
     * Receiving gateway RX info.
     *
     * Generated from protobuf field <code>repeated .gw.UplinkRxInfo rx_info = 12;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRxInfo()
    {
        return $this->rx_info;
    }

    /**
     * Receiving gateway RX info.
     *
     * Generated from protobuf field <code>repeated .gw.UplinkRxInfo rx_info = 12;</code>
     * @param array<\Chirpstack\Gateway\UplinkRxInfo>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRxInfo($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Chirpstack\Gateway\UplinkRxInfo::class);
        $this->rx_info = $arr;

        return $this;
    }

    /**
     * TX info.
     *
     * Generated from protobuf field <code>.gw.UplinkTxInfo tx_info = 13;</code>
     * @return \Chirpstack\Gateway\UplinkTxInfo|null
     */
    public function getTxInfo()
    {
        return $this->tx_info;
    }

    public function hasTxInfo()
    {
        return isset($this->tx_info);
    }

    public function clearTxInfo()
    {
        unset($this->tx_info);
    }

    /**
     * TX info.
     *
     * Generated from protobuf field <code>.gw.UplinkTxInfo tx_info = 13;</code>
     * @param \Chirpstack\Gateway\UplinkTxInfo $var
     * @return $this
     */
    public function setTxInfo($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Gateway\UplinkTxInfo::class);
        $this->tx_info = $var;

        return $this;
    }

    /**
     * Relay info.
     *
     * Generated from protobuf field <code>.integration.UplinkRelayRxInfo relay_rx_info = 14;</code>
     * @return \Chirpstack\Integration\UplinkRelayRxInfo|null
     */
    public function getRelayRxInfo()
    {
        return $this->relay_rx_info;
    }

    public function hasRelayRxInfo()
    {
        return isset($this->relay_rx_info);
    }

    public function clearRelayRxInfo()
    {
        unset($this->relay_rx_info);
    }

    /**
     * Relay info.
     *
     * Generated from protobuf field <code>.integration.UplinkRelayRxInfo relay_rx_info = 14;</code>
     * @param \Chirpstack\Integration\UplinkRelayRxInfo $var
     * @return $this
     */
    public function setRelayRxInfo($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Integration\UplinkRelayRxInfo::class);
        $this->relay_rx_info = $var;

        return $this;
    }

    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 15;</code>
     * @return \Chirpstack\Common\JoinServerContext|null
     */
    public function getJoinServerContext()
    {
        return $this->join_server_context;
    }

    public function hasJoinServerContext()
    {
        return isset($this->join_server_context);
    }

    public function clearJoinServerContext()
    {
        unset($this->join_server_context);
    }

    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 15;</code>
     * @param \Chirpstack\Common\JoinServerContext $var
     * @return $this
     */
    public function setJoinServerContext($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Common\JoinServerContext::class);
        $this->join_server_context = $var;

        return $this;
    }

}

