<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/common.proto

namespace Chirpstack\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>common.Location</code>
 */
class Location extends \Google\Protobuf\Internal\Message
{
    /**
     * Latitude.
     *
     * Generated from protobuf field <code>double latitude = 1;</code>
     */
    protected $latitude = 0.0;
    /**
     * Longitude.
     *
     * Generated from protobuf field <code>double longitude = 2;</code>
     */
    protected $longitude = 0.0;
    /**
     * Altitude.
     *
     * Generated from protobuf field <code>double altitude = 3;</code>
     */
    protected $altitude = 0.0;
    /**
     * Location source.
     *
     * Generated from protobuf field <code>.common.LocationSource source = 4;</code>
     */
    protected $source = 0;
    /**
     * Accuracy.
     *
     * Generated from protobuf field <code>float accuracy = 5;</code>
     */
    protected $accuracy = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $latitude
     *           Latitude.
     *     @type float $longitude
     *           Longitude.
     *     @type float $altitude
     *           Altitude.
     *     @type int $source
     *           Location source.
     *     @type float $accuracy
     *           Accuracy.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chirpstack\Common\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Latitude.
     *
     * Generated from protobuf field <code>double latitude = 1;</code>
     * @return float
     */
    public function getLatitude()
    {
        return $this->latitude;
    }

    /**
     * Latitude.
     *
     * Generated from protobuf field <code>double latitude = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setLatitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->latitude = $var;

        return $this;
    }

    /**
     * Longitude.
     *
     * Generated from protobuf field <code>double longitude = 2;</code>
     * @return float
     */
    public function getLongitude()
    {
        return $this->longitude;
    }

    /**
     * Longitude.
     *
     * Generated from protobuf field <code>double longitude = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setLongitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->longitude = $var;

        return $this;
    }

    /**
     * Altitude.
     *
     * Generated from protobuf field <code>double altitude = 3;</code>
     * @return float
     */
    public function getAltitude()
    {
        return $this->altitude;
    }

    /**
     * Altitude.
     *
     * Generated from protobuf field <code>double altitude = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setAltitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->altitude = $var;

        return $this;
    }

    /**
     * Location source.
     *
     * Generated from protobuf field <code>.common.LocationSource source = 4;</code>
     * @return int
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Location source.
     *
     * Generated from protobuf field <code>.common.LocationSource source = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkEnum($var, \Chirpstack\Common\LocationSource::class);
        $this->source = $var;

        return $this;
    }

    /**
     * Accuracy.
     *
     * Generated from protobuf field <code>float accuracy = 5;</code>
     * @return float
     */
    public function getAccuracy()
    {
        return $this->accuracy;
    }

    /**
     * Accuracy.
     *
     * Generated from protobuf field <code>float accuracy = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setAccuracy($var)
    {
        GPBUtil::checkFloat($var);
        $this->accuracy = $var;

        return $this;
    }

}

