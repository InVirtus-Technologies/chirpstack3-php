<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/common.proto

namespace Chirpstack\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Join-Server context.
 *
 * Generated from protobuf message <code>common.JoinServerContext</code>
 */
class JoinServerContext extends \Google\Protobuf\Internal\Message
{
    /**
     * Session-key ID.
     *
     * Generated from protobuf field <code>string session_key_id = 1;</code>
     */
    protected $session_key_id = '';
    /**
     * AppSKey envelope.
     *
     * Generated from protobuf field <code>.common.KeyEnvelope app_s_key = 2;</code>
     */
    protected $app_s_key = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $session_key_id
     *           Session-key ID.
     *     @type \Chirpstack\Common\KeyEnvelope $app_s_key
     *           AppSKey envelope.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chirpstack\Common\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Session-key ID.
     *
     * Generated from protobuf field <code>string session_key_id = 1;</code>
     * @return string
     */
    public function getSessionKeyId()
    {
        return $this->session_key_id;
    }

    /**
     * Session-key ID.
     *
     * Generated from protobuf field <code>string session_key_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSessionKeyId($var)
    {
        GPBUtil::checkString($var, True);
        $this->session_key_id = $var;

        return $this;
    }

    /**
     * AppSKey envelope.
     *
     * Generated from protobuf field <code>.common.KeyEnvelope app_s_key = 2;</code>
     * @return \Chirpstack\Common\KeyEnvelope|null
     */
    public function getAppSKey()
    {
        return $this->app_s_key;
    }

    public function hasAppSKey()
    {
        return isset($this->app_s_key);
    }

    public function clearAppSKey()
    {
        unset($this->app_s_key);
    }

    /**
     * AppSKey envelope.
     *
     * Generated from protobuf field <code>.common.KeyEnvelope app_s_key = 2;</code>
     * @param \Chirpstack\Common\KeyEnvelope $var
     * @return $this
     */
    public function setAppSKey($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Common\KeyEnvelope::class);
        $this->app_s_key = $var;

        return $this;
    }

}

