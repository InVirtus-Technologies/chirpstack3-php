<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: as/external/api/organization.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.Organization</code>
 */
class Organization extends \Google\Protobuf\Internal\Message
{
    /**
     * Organization ID.
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Organization name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Organization display name.
     *
     * Generated from protobuf field <code>string display_name = 3;</code>
     */
    protected $display_name = '';
    /**
     * Can the organization create and "own" Gateways?
     *
     * Generated from protobuf field <code>bool can_have_gateways = 4;</code>
     */
    protected $can_have_gateways = false;
    /**
     * Max. gateway count for organization.
     * When set to 0, the organization can have unlimited gateways.
     *
     * Generated from protobuf field <code>uint32 max_gateway_count = 5;</code>
     */
    protected $max_gateway_count = 0;
    /**
     * Max. device count for organization.
     * When set to 0, the organization can have unlimited devices.
     *
     * Generated from protobuf field <code>uint32 max_device_count = 6;</code>
     */
    protected $max_device_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *           Organization ID.
     *     @type string $name
     *           Organization name.
     *     @type string $display_name
     *           Organization display name.
     *     @type bool $can_have_gateways
     *           Can the organization create and "own" Gateways?
     *     @type int $max_gateway_count
     *           Max. gateway count for organization.
     *           When set to 0, the organization can have unlimited gateways.
     *     @type int $max_device_count
     *           Max. device count for organization.
     *           When set to 0, the organization can have unlimited devices.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBAs\External\Api\Organization::initOnce();
        parent::__construct($data);
    }

    /**
     * Organization ID.
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Organization ID.
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Organization name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Organization name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Organization display name.
     *
     * Generated from protobuf field <code>string display_name = 3;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Organization display name.
     *
     * Generated from protobuf field <code>string display_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Can the organization create and "own" Gateways?
     *
     * Generated from protobuf field <code>bool can_have_gateways = 4;</code>
     * @return bool
     */
    public function getCanHaveGateways()
    {
        return $this->can_have_gateways;
    }

    /**
     * Can the organization create and "own" Gateways?
     *
     * Generated from protobuf field <code>bool can_have_gateways = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setCanHaveGateways($var)
    {
        GPBUtil::checkBool($var);
        $this->can_have_gateways = $var;

        return $this;
    }

    /**
     * Max. gateway count for organization.
     * When set to 0, the organization can have unlimited gateways.
     *
     * Generated from protobuf field <code>uint32 max_gateway_count = 5;</code>
     * @return int
     */
    public function getMaxGatewayCount()
    {
        return $this->max_gateway_count;
    }

    /**
     * Max. gateway count for organization.
     * When set to 0, the organization can have unlimited gateways.
     *
     * Generated from protobuf field <code>uint32 max_gateway_count = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxGatewayCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_gateway_count = $var;

        return $this;
    }

    /**
     * Max. device count for organization.
     * When set to 0, the organization can have unlimited devices.
     *
     * Generated from protobuf field <code>uint32 max_device_count = 6;</code>
     * @return int
     */
    public function getMaxDeviceCount()
    {
        return $this->max_device_count;
    }

    /**
     * Max. device count for organization.
     * When set to 0, the organization can have unlimited devices.
     *
     * Generated from protobuf field <code>uint32 max_device_count = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxDeviceCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_device_count = $var;

        return $this;
    }

}

