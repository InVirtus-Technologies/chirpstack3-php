<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: as/external/api/internal.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.SettingsResponse</code>
 */
class SettingsResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Branding settings.
     *
     * Generated from protobuf field <code>.api.Branding branding = 2;</code>
     */
    protected $branding = null;
    /**
     * OpenID Connect settings.
     *
     * Generated from protobuf field <code>.api.OpenIDConnect openid_connect = 3;</code>
     */
    protected $openid_connect = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Api\Branding $branding
     *           Branding settings.
     *     @type \Api\OpenIDConnect $openid_connect
     *           OpenID Connect settings.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBAs\External\Api\Internal::initOnce();
        parent::__construct($data);
    }

    /**
     * Branding settings.
     *
     * Generated from protobuf field <code>.api.Branding branding = 2;</code>
     * @return \Api\Branding|null
     */
    public function getBranding()
    {
        return $this->branding;
    }

    public function hasBranding()
    {
        return isset($this->branding);
    }

    public function clearBranding()
    {
        unset($this->branding);
    }

    /**
     * Branding settings.
     *
     * Generated from protobuf field <code>.api.Branding branding = 2;</code>
     * @param \Api\Branding $var
     * @return $this
     */
    public function setBranding($var)
    {
        GPBUtil::checkMessage($var, \Api\Branding::class);
        $this->branding = $var;

        return $this;
    }

    /**
     * OpenID Connect settings.
     *
     * Generated from protobuf field <code>.api.OpenIDConnect openid_connect = 3;</code>
     * @return \Api\OpenIDConnect|null
     */
    public function getOpenidConnect()
    {
        return $this->openid_connect;
    }

    public function hasOpenidConnect()
    {
        return isset($this->openid_connect);
    }

    public function clearOpenidConnect()
    {
        unset($this->openid_connect);
    }

    /**
     * OpenID Connect settings.
     *
     * Generated from protobuf field <code>.api.OpenIDConnect openid_connect = 3;</code>
     * @param \Api\OpenIDConnect $var
     * @return $this
     */
    public function setOpenidConnect($var)
    {
        GPBUtil::checkMessage($var, \Api\OpenIDConnect::class);
        $this->openid_connect = $var;

        return $this;
    }

}

