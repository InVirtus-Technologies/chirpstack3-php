<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/multicast_group.proto

namespace Chirpstack\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.ListMulticastGroupsRequest</code>
 */
class ListMulticastGroupsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Max number of multicast groups to return in the result-set.
     *
     * Generated from protobuf field <code>uint32 limit = 1;</code>
     */
    protected $limit = 0;
    /**
     * Offset in the result-set (for pagination).
     *
     * Generated from protobuf field <code>uint32 offset = 2;</code>
     */
    protected $offset = 0;
    /**
     * If set, the given string will be used to search on name.
     *
     * Generated from protobuf field <code>string search = 3;</code>
     */
    protected $search = '';
    /**
     * Application ID to list the multicast groups for.
     *
     * Generated from protobuf field <code>string application_id = 4;</code>
     */
    protected $application_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $limit
     *           Max number of multicast groups to return in the result-set.
     *     @type int $offset
     *           Offset in the result-set (for pagination).
     *     @type string $search
     *           If set, the given string will be used to search on name.
     *     @type string $application_id
     *           Application ID to list the multicast groups for.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chirpstack\Api\MulticastGroup::initOnce();
        parent::__construct($data);
    }

    /**
     * Max number of multicast groups to return in the result-set.
     *
     * Generated from protobuf field <code>uint32 limit = 1;</code>
     * @return int
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * Max number of multicast groups to return in the result-set.
     *
     * Generated from protobuf field <code>uint32 limit = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkUint32($var);
        $this->limit = $var;

        return $this;
    }

    /**
     * Offset in the result-set (for pagination).
     *
     * Generated from protobuf field <code>uint32 offset = 2;</code>
     * @return int
     */
    public function getOffset()
    {
        return $this->offset;
    }

    /**
     * Offset in the result-set (for pagination).
     *
     * Generated from protobuf field <code>uint32 offset = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setOffset($var)
    {
        GPBUtil::checkUint32($var);
        $this->offset = $var;

        return $this;
    }

    /**
     * If set, the given string will be used to search on name.
     *
     * Generated from protobuf field <code>string search = 3;</code>
     * @return string
     */
    public function getSearch()
    {
        return $this->search;
    }

    /**
     * If set, the given string will be used to search on name.
     *
     * Generated from protobuf field <code>string search = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSearch($var)
    {
        GPBUtil::checkString($var, True);
        $this->search = $var;

        return $this;
    }

    /**
     * Application ID to list the multicast groups for.
     *
     * Generated from protobuf field <code>string application_id = 4;</code>
     * @return string
     */
    public function getApplicationId()
    {
        return $this->application_id;
    }

    /**
     * Application ID to list the multicast groups for.
     *
     * Generated from protobuf field <code>string application_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setApplicationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->application_id = $var;

        return $this;
    }

}

