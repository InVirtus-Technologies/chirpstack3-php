<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/application.proto

namespace Chirpstack\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.LoraCloudIntegration</code>
 */
class LoraCloudIntegration extends \Google\Protobuf\Internal\Message
{
    /**
     * Application ID (UUID).
     *
     * Generated from protobuf field <code>string application_id = 1;</code>
     */
    protected $application_id = '';
    /**
     * Modem & Geolocation Services configuration.
     *
     * Generated from protobuf field <code>.api.LoraCloudModemGeolocationServices modem_geolocation_services = 2;</code>
     */
    protected $modem_geolocation_services = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $application_id
     *           Application ID (UUID).
     *     @type \Chirpstack\Api\LoraCloudModemGeolocationServices $modem_geolocation_services
     *           Modem & Geolocation Services configuration.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chirpstack\Api\Application::initOnce();
        parent::__construct($data);
    }

    /**
     * Application ID (UUID).
     *
     * Generated from protobuf field <code>string application_id = 1;</code>
     * @return string
     */
    public function getApplicationId()
    {
        return $this->application_id;
    }

    /**
     * Application ID (UUID).
     *
     * Generated from protobuf field <code>string application_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setApplicationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->application_id = $var;

        return $this;
    }

    /**
     * Modem & Geolocation Services configuration.
     *
     * Generated from protobuf field <code>.api.LoraCloudModemGeolocationServices modem_geolocation_services = 2;</code>
     * @return \Chirpstack\Api\LoraCloudModemGeolocationServices|null
     */
    public function getModemGeolocationServices()
    {
        return $this->modem_geolocation_services;
    }

    public function hasModemGeolocationServices()
    {
        return isset($this->modem_geolocation_services);
    }

    public function clearModemGeolocationServices()
    {
        unset($this->modem_geolocation_services);
    }

    /**
     * Modem & Geolocation Services configuration.
     *
     * Generated from protobuf field <code>.api.LoraCloudModemGeolocationServices modem_geolocation_services = 2;</code>
     * @param \Chirpstack\Api\LoraCloudModemGeolocationServices $var
     * @return $this
     */
    public function setModemGeolocationServices($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Api\LoraCloudModemGeolocationServices::class);
        $this->modem_geolocation_services = $var;

        return $this;
    }

}

