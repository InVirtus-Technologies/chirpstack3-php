<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/device_profile.proto

namespace Chirpstack\Api;

use UnexpectedValueException;

/**
 * Protobuf type <code>api.SecondChAckOffset</code>
 */
class SecondChAckOffset
{
    /**
     * 0 kHz.
     *
     * Generated from protobuf enum <code>KHZ_0 = 0;</code>
     */
    const KHZ_0 = 0;
    /**
     * 200 kHz.
     *
     * Generated from protobuf enum <code>KHZ_200 = 1;</code>
     */
    const KHZ_200 = 1;
    /**
     * 400 kHz.
     *
     * Generated from protobuf enum <code>KHZ_400 = 2;</code>
     */
    const KHZ_400 = 2;
    /**
     * 800 kHz.
     *
     * Generated from protobuf enum <code>KHZ_800 = 3;</code>
     */
    const KHZ_800 = 3;
    /**
     * 1600 kHz.
     *
     * Generated from protobuf enum <code>KHZ_1600 = 4;</code>
     */
    const KHZ_1600 = 4;
    /**
     * 3200 kHz.
     *
     * Generated from protobuf enum <code>KHZ_3200 = 5;</code>
     */
    const KHZ_3200 = 5;

    private static $valueToName = [
        self::KHZ_0 => 'KHZ_0',
        self::KHZ_200 => 'KHZ_200',
        self::KHZ_400 => 'KHZ_400',
        self::KHZ_800 => 'KHZ_800',
        self::KHZ_1600 => 'KHZ_1600',
        self::KHZ_3200 => 'KHZ_3200',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

