<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/internal.proto

namespace Chirpstack\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.ApiKey</code>
 */
class ApiKey extends \Google\Protobuf\Internal\Message
{
    /**
     * API key ID.
     * This value will be automatically generated on create.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Is global admin key.
     *
     * Generated from protobuf field <code>bool is_admin = 3;</code>
     */
    protected $is_admin = false;
    /**
     * Tenant ID.
     * In case the API key is intended to manage resources under a single tenant.
     *
     * Generated from protobuf field <code>string tenant_id = 4;</code>
     */
    protected $tenant_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           API key ID.
     *           This value will be automatically generated on create.
     *     @type string $name
     *           Name.
     *     @type bool $is_admin
     *           Is global admin key.
     *     @type string $tenant_id
     *           Tenant ID.
     *           In case the API key is intended to manage resources under a single tenant.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chirpstack\Api\Internal::initOnce();
        parent::__construct($data);
    }

    /**
     * API key ID.
     * This value will be automatically generated on create.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * API key ID.
     * This value will be automatically generated on create.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Is global admin key.
     *
     * Generated from protobuf field <code>bool is_admin = 3;</code>
     * @return bool
     */
    public function getIsAdmin()
    {
        return $this->is_admin;
    }

    /**
     * Is global admin key.
     *
     * Generated from protobuf field <code>bool is_admin = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsAdmin($var)
    {
        GPBUtil::checkBool($var);
        $this->is_admin = $var;

        return $this;
    }

    /**
     * Tenant ID.
     * In case the API key is intended to manage resources under a single tenant.
     *
     * Generated from protobuf field <code>string tenant_id = 4;</code>
     * @return string
     */
    public function getTenantId()
    {
        return $this->tenant_id;
    }

    /**
     * Tenant ID.
     * In case the API key is intended to manage resources under a single tenant.
     *
     * Generated from protobuf field <code>string tenant_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setTenantId($var)
    {
        GPBUtil::checkString($var, True);
        $this->tenant_id = $var;

        return $this;
    }

}

