<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: as/external/api/gateway.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.Gateway</code>
 */
class Gateway extends \Google\Protobuf\Internal\Message
{
    /**
     * Gateway ID (HEX encoded).
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Gateway name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Gateway description.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     */
    protected $description = '';
    /**
     * Gateway location.
     *
     * Generated from protobuf field <code>.common.Location location = 4;</code>
     */
    protected $location = null;
    /**
     * Organization ID to which the gateway belongs.
     * This can't be changed after creating the gateway.
     *
     * Generated from protobuf field <code>int64 organization_id = 5 [json_name = "organizationID"];</code>
     */
    protected $organization_id = 0;
    /**
     * Set to true to enable gateway discovery.
     *
     * Generated from protobuf field <code>bool discovery_enabled = 6;</code>
     */
    protected $discovery_enabled = false;
    /**
     * Network-server ID on which the gateway is provisioned.
     *
     * Generated from protobuf field <code>int64 network_server_id = 7 [json_name = "networkServerID"];</code>
     */
    protected $network_server_id = 0;
    /**
     * Gateway-profile ID (UUID string, optional).
     *
     * Generated from protobuf field <code>string gateway_profile_id = 8 [json_name = "gatewayProfileID"];</code>
     */
    protected $gateway_profile_id = '';
    /**
     * Gateway boards configuration (optional).
     * This is (currently) only needed when the gateway supports the fine-timestamp
     * and you you would like to add the FPGA ID to the gateway meta-data or would
     * like ChirpStack Network Server to decrypt the fine-timestamp.
     *
     * Generated from protobuf field <code>repeated .api.GatewayBoard boards = 9;</code>
     */
    private $boards;
    /**
     * Tags (user defined).
     *
     * Generated from protobuf field <code>map<string, string> tags = 10;</code>
     */
    private $tags;
    /**
     * Metadata (provided by the gateway).
     *
     * Generated from protobuf field <code>map<string, string> metadata = 11;</code>
     */
    private $metadata;
    /**
     * Service-profile ID (UUID string, optional).
     *
     * Generated from protobuf field <code>string service_profile_id = 12 [json_name = "serviceProfileID"];</code>
     */
    protected $service_profile_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Gateway ID (HEX encoded).
     *     @type string $name
     *           Gateway name.
     *     @type string $description
     *           Gateway description.
     *     @type \Common\Location $location
     *           Gateway location.
     *     @type int|string $organization_id
     *           Organization ID to which the gateway belongs.
     *           This can't be changed after creating the gateway.
     *     @type bool $discovery_enabled
     *           Set to true to enable gateway discovery.
     *     @type int|string $network_server_id
     *           Network-server ID on which the gateway is provisioned.
     *     @type string $gateway_profile_id
     *           Gateway-profile ID (UUID string, optional).
     *     @type array<\Api\GatewayBoard>|\Google\Protobuf\Internal\RepeatedField $boards
     *           Gateway boards configuration (optional).
     *           This is (currently) only needed when the gateway supports the fine-timestamp
     *           and you you would like to add the FPGA ID to the gateway meta-data or would
     *           like ChirpStack Network Server to decrypt the fine-timestamp.
     *     @type array|\Google\Protobuf\Internal\MapField $tags
     *           Tags (user defined).
     *     @type array|\Google\Protobuf\Internal\MapField $metadata
     *           Metadata (provided by the gateway).
     *     @type string $service_profile_id
     *           Service-profile ID (UUID string, optional).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBAs\External\Api\Gateway::initOnce();
        parent::__construct($data);
    }

    /**
     * Gateway ID (HEX encoded).
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Gateway ID (HEX encoded).
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Gateway name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Gateway name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Gateway description.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Gateway description.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Gateway location.
     *
     * Generated from protobuf field <code>.common.Location location = 4;</code>
     * @return \Common\Location|null
     */
    public function getLocation()
    {
        return $this->location;
    }

    public function hasLocation()
    {
        return isset($this->location);
    }

    public function clearLocation()
    {
        unset($this->location);
    }

    /**
     * Gateway location.
     *
     * Generated from protobuf field <code>.common.Location location = 4;</code>
     * @param \Common\Location $var
     * @return $this
     */
    public function setLocation($var)
    {
        GPBUtil::checkMessage($var, \Common\Location::class);
        $this->location = $var;

        return $this;
    }

    /**
     * Organization ID to which the gateway belongs.
     * This can't be changed after creating the gateway.
     *
     * Generated from protobuf field <code>int64 organization_id = 5 [json_name = "organizationID"];</code>
     * @return int|string
     */
    public function getOrganizationId()
    {
        return $this->organization_id;
    }

    /**
     * Organization ID to which the gateway belongs.
     * This can't be changed after creating the gateway.
     *
     * Generated from protobuf field <code>int64 organization_id = 5 [json_name = "organizationID"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setOrganizationId($var)
    {
        GPBUtil::checkInt64($var);
        $this->organization_id = $var;

        return $this;
    }

    /**
     * Set to true to enable gateway discovery.
     *
     * Generated from protobuf field <code>bool discovery_enabled = 6;</code>
     * @return bool
     */
    public function getDiscoveryEnabled()
    {
        return $this->discovery_enabled;
    }

    /**
     * Set to true to enable gateway discovery.
     *
     * Generated from protobuf field <code>bool discovery_enabled = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setDiscoveryEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->discovery_enabled = $var;

        return $this;
    }

    /**
     * Network-server ID on which the gateway is provisioned.
     *
     * Generated from protobuf field <code>int64 network_server_id = 7 [json_name = "networkServerID"];</code>
     * @return int|string
     */
    public function getNetworkServerId()
    {
        return $this->network_server_id;
    }

    /**
     * Network-server ID on which the gateway is provisioned.
     *
     * Generated from protobuf field <code>int64 network_server_id = 7 [json_name = "networkServerID"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setNetworkServerId($var)
    {
        GPBUtil::checkInt64($var);
        $this->network_server_id = $var;

        return $this;
    }

    /**
     * Gateway-profile ID (UUID string, optional).
     *
     * Generated from protobuf field <code>string gateway_profile_id = 8 [json_name = "gatewayProfileID"];</code>
     * @return string
     */
    public function getGatewayProfileId()
    {
        return $this->gateway_profile_id;
    }

    /**
     * Gateway-profile ID (UUID string, optional).
     *
     * Generated from protobuf field <code>string gateway_profile_id = 8 [json_name = "gatewayProfileID"];</code>
     * @param string $var
     * @return $this
     */
    public function setGatewayProfileId($var)
    {
        GPBUtil::checkString($var, True);
        $this->gateway_profile_id = $var;

        return $this;
    }

    /**
     * Gateway boards configuration (optional).
     * This is (currently) only needed when the gateway supports the fine-timestamp
     * and you you would like to add the FPGA ID to the gateway meta-data or would
     * like ChirpStack Network Server to decrypt the fine-timestamp.
     *
     * Generated from protobuf field <code>repeated .api.GatewayBoard boards = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getBoards()
    {
        return $this->boards;
    }

    /**
     * Gateway boards configuration (optional).
     * This is (currently) only needed when the gateway supports the fine-timestamp
     * and you you would like to add the FPGA ID to the gateway meta-data or would
     * like ChirpStack Network Server to decrypt the fine-timestamp.
     *
     * Generated from protobuf field <code>repeated .api.GatewayBoard boards = 9;</code>
     * @param array<\Api\GatewayBoard>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setBoards($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Api\GatewayBoard::class);
        $this->boards = $arr;

        return $this;
    }

    /**
     * Tags (user defined).
     *
     * Generated from protobuf field <code>map<string, string> tags = 10;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getTags()
    {
        return $this->tags;
    }

    /**
     * Tags (user defined).
     *
     * Generated from protobuf field <code>map<string, string> tags = 10;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setTags($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->tags = $arr;

        return $this;
    }

    /**
     * Metadata (provided by the gateway).
     *
     * Generated from protobuf field <code>map<string, string> metadata = 11;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Metadata (provided by the gateway).
     *
     * Generated from protobuf field <code>map<string, string> metadata = 11;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->metadata = $arr;

        return $this;
    }

    /**
     * Service-profile ID (UUID string, optional).
     *
     * Generated from protobuf field <code>string service_profile_id = 12 [json_name = "serviceProfileID"];</code>
     * @return string
     */
    public function getServiceProfileId()
    {
        return $this->service_profile_id;
    }

    /**
     * Service-profile ID (UUID string, optional).
     *
     * Generated from protobuf field <code>string service_profile_id = 12 [json_name = "serviceProfileID"];</code>
     * @param string $var
     * @return $this
     */
    public function setServiceProfileId($var)
    {
        GPBUtil::checkString($var, True);
        $this->service_profile_id = $var;

        return $this;
    }

}

