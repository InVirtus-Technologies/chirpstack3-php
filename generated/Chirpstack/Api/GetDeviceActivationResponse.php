<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/device.proto

namespace Chirpstack\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.GetDeviceActivationResponse</code>
 */
class GetDeviceActivationResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Device activation object.
     *
     * Generated from protobuf field <code>.api.DeviceActivation device_activation = 1;</code>
     */
    protected $device_activation = null;
    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 2;</code>
     */
    protected $join_server_context = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Chirpstack\Api\DeviceActivation $device_activation
     *           Device activation object.
     *     @type \Chirpstack\Common\JoinServerContext $join_server_context
     *           Join-Server context.
     *           A non-empty value indicatest that ChirpStack does not have access to
     *           the AppSKey and that the encryption / decryption of the payloads is
     *           the responsibility of the end-application.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chirpstack\Api\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * Device activation object.
     *
     * Generated from protobuf field <code>.api.DeviceActivation device_activation = 1;</code>
     * @return \Chirpstack\Api\DeviceActivation|null
     */
    public function getDeviceActivation()
    {
        return $this->device_activation;
    }

    public function hasDeviceActivation()
    {
        return isset($this->device_activation);
    }

    public function clearDeviceActivation()
    {
        unset($this->device_activation);
    }

    /**
     * Device activation object.
     *
     * Generated from protobuf field <code>.api.DeviceActivation device_activation = 1;</code>
     * @param \Chirpstack\Api\DeviceActivation $var
     * @return $this
     */
    public function setDeviceActivation($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Api\DeviceActivation::class);
        $this->device_activation = $var;

        return $this;
    }

    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 2;</code>
     * @return \Chirpstack\Common\JoinServerContext|null
     */
    public function getJoinServerContext()
    {
        return $this->join_server_context;
    }

    public function hasJoinServerContext()
    {
        return isset($this->join_server_context);
    }

    public function clearJoinServerContext()
    {
        unset($this->join_server_context);
    }

    /**
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     *
     * Generated from protobuf field <code>.common.JoinServerContext join_server_context = 2;</code>
     * @param \Chirpstack\Common\JoinServerContext $var
     * @return $this
     */
    public function setJoinServerContext($var)
    {
        GPBUtil::checkMessage($var, \Chirpstack\Common\JoinServerContext::class);
        $this->join_server_context = $var;

        return $this;
    }

}

